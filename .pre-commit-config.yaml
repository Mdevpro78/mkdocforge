%YAML 1.2
---
# Pre-commit Configuration
# This file configures pre-commit hooks that run automatically before git commits
# to ensure code quality, formatting, and prevent security issues.
# https://pre-commit.com/
default_install_hook_types:
  - pre-commit
  - commit-msg

repos:

  #########################################
  # General Code Quality Checks
  #########################################
  - repo: https://github.com/pre-commit/pre-commit-hooks
    # Standard collection of pre-commit hooks for various checks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        name: "✂️ whitespace · Remove trailing whitespace"
        # Removes trailing whitespace at end of lines
      - id: check-ast
        name: "🔍 python · Check Python AST"
        # Validates Python syntax without executing code
      - id: end-of-file-fixer
        name: "📄 files · Fix end of files"
        # Ensures files end with a newline
      - id: check-yaml
        name: "📋 yaml · Validate YAML files"
        exclude: "mkdocs.yml"
        # Validates YAML syntax
      - id: check-toml
        name: "📋 toml · Validate TOML files"
        # Validates TOML syntax
      - id: check-json
        name: "📋 json · Validate JSON files"
        # Validates JSON syntax
      - id: check-added-large-files
        name: "📏 files · Check for added large files"
        # Prevents large files from being committed
      - id: detect-private-key
        name: "🔑 security · Detect private keys"
        # Prevents accidental commit of private keys
      - id: pretty-format-json
        name: "📋 json · Format JSON files"
        # Formats JSON files for readability
      - id: check-merge-conflict
        name: "🔀 git · Check for merge conflicts"
      - id: forbid-new-submodules
        name: "🌳 git · Prevent submodule creation"

      - id: no-commit-to-branch
        name: "🌳 git · Protect main branches"
        args: ["--branch", "main", "--branch", "master"]
        # Prevents direct commits to protected branches
        # Detects unresolved merge conflicts
      - id: check-executables-have-shebangs
        name: "📜 files · Check executables have shebangs"
        # Ensures executable files have proper shebangs
      - id: check-shebang-scripts-are-executable
        name: "📜 files · Check shebang scripts are executable"
        # Makes sure files with shebangs are executable
      - id: pretty-format-json
        name: "📋 json · Format JSON files"
        args: [--autofix, --no-sort-keys]  # Fix formatting but don't sort keys
      - id: name-tests-test
        name: "🧪 tests · Check test file naming"
        args: [--pytest-test-first]  # Enforces pytest naming conventions
      - id: mixed-line-ending
        name: "📄 files · Fix mixed line endings"
        args: ['--fix=lf']  # Standardize on LF line endings
      - id: check-case-conflict
        name: "📁 filesystem/📝 names · Check case sensitivity"
      - id: check-illegal-windows-names
        name: "📁 filesystem/📝 names · Validate Windows filenames"
      - id: check-symlinks
        name: "📁 filesystem/🔗 symlink · Check symlink validity"
      - id: destroyed-symlinks
        name: "📁 filesystem/🔗 symlink · Detect broken symlinks"

  #########################################
  # Python Formatting and Linting
  #########################################
  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff is a fast Python linter and formatter written in Rust
    rev: v0.11.2
    hooks:
      - id: ruff
        name: "🐍 python · Format with Ruff"
        args: [--fix, --exit-non-zero-on-fix]  # Automatically fix issues when possible
      - id: ruff-format
        name: "🐍 python · Format with Ruff"
        # Automatically formats Python code


  #########################################
  # Python Code Modernization
  #########################################
  - repo: https://github.com/asottile/pyupgrade
    # Automatically upgrades Python syntax to newer versions
    rev: v3.19.1
    hooks:
      - id: pyupgrade
        name: "🔄 python · Upgrade Python syntax"
        args: ["--py311-plus"]  # Use Python 3.11+ specific syntax improvements
        # Upgrades syntax to use newer Python features

  - repo: https://github.com/asottile/add-trailing-comma
    # Adds trailing commas to function calls and definitions
    rev: v3.1.0
    hooks:
      - id: add-trailing-comma
        name: "🔤 python · Add trailing commas"
        # Makes future diffs cleaner and multiline constructs more consistent

# Set default Python version for all hooks
default_language_version:
  python: python3.11

# Define which git hooks these run on (defaults to pre-commit)
default_stages: [pre-commit]
